module.exports = {
    components: {
        schemas: {
            // User model
            User: {
                type: "object",
                properties: {
                    id: {
                        type: "string",
                        description: "User self-defined identification number",
                        example: "bobo",
                    },
                    name: {
                        type: "string",
                        description: "User's name",
                        example: "Bobo Tan",
                    },
                    password: {
                        type: "string",
                        description: "User's encrypted password for authentication",
                        example: "12345",
                    },
                    dob: {
                        type: "string",
                        description: "User's date of birth",
                        example: "01/20/1990",
                    },
                    address: {
                        type: "string",
                        description: "User's address",
                        example: "Hougang Avenue 10, Singapore",
                    },
                    description: {
                        type: "string",
                        description: "Short description about user",
                        example: "Mid-senior level Software Engineer",
                    },
                    refreshToken: {
                        type: "string",
                        description: "User's refresh token for authentication",
                        example: "12345",
                    },
                    createdAt: {
                        type: "string",
                        description: "Creation date for new user (timestamp generated by MongoDB)",
                        example: "2021-08-05T10:28:59.742+00:00",
                    },
                    roles: {
                        type: "array",
                        description: "User's roles",
                        example: ["Admin"]
                    }
                },
            },
            // Role model
            Role: {
                type: "object",
                properties: {
                    name: {
                        type: "string",
                        description: "Role's name",
                        example: "Admin"
                    },
                },
            },
            // SuccessResponse model for token generation
            TokenSuccessResponse: {
                type: "object",
                properties: {
                    accessToken: {
                        type: "string",
                        description: "User's new access token",
                        example: "hsjdhsjhskf"
                    },
                    refreshToken: {
                        type: "string",
                        description: "User's new refresh token",
                        example: "wiqiwhfkfn"
                    },
                },
            },
            // SuccessResponse model
            SuccessResponse: {
                type: "object", //data type
                properties: {
                    message: {
                        type: "string", // data type
                        description: "Success message", // desc
                        example: "User was {action} successfully", // example of an error internal code
                    },
                },
            },
            // UnauthenticatedError model
            UnauthenticatedError: {
                type: "object", //data type
                properties: {
                    statusCode: {
                        type: "integer", // data type
                        description: "Error status code", // desc
                        example: 401, // example of an error message
                    },
                    message: {
                        type: "string", // data type
                        description: "Error message", // desc
                        example: "Error: Invalid refresh token", // example of an error internal code
                    },
                },
            },
            // BadRequestError model
            BadRequestError: {
                type: "object", //data type
                properties: {
                    statusCode: {
                        type: "integer", // data type
                        description: "Error status code", // desc
                        example: 400, // example of an error message
                    },
                    message: {
                        type: "string", // data type
                        description: "Error message", // desc
                        example: "Error: User ID cannot be empty", // example of an error internal code
                    },
                },
            },
            // NotFoundError model
            NotFoundError: {
                type: "object", //data type
                properties: {
                    statusCode: {
                        type: "integer", // data type
                        description: "Error status code", // desc
                        example: 404, // example of an error message
                    },
                    message: {
                        type: "string", // data type
                        description: "Error message", // desc
                        example: "User not found with user ID test_id", // example of an error internal code
                    },
                },
            },
            // InternalServerError model
            InternalServerError: {
                type: "object", //data type
                properties: {
                    statusCode: {
                        type: "integer", // data type
                        description: "Error status code", // desc
                        example: 500, // example of an error message
                    },
                    message: {
                        type: "string", // data type
                        description: "Error message", // desc
                        example: "Errors occur in database: {error}", // example of an error internal code
                    },
                },
            },
            // Model for update user input
            UpdateUserInput: {
                type: "object",
                properties: {
                    name: {
                        type: "string",
                        description: "User's name",
                        example: "Coco Tan",
                    },
                    dob: {
                        type: "string",
                        description: "User's date of birth",
                        example: "01/20/2000",
                    },
                    address: {
                        type: "string",
                        description: "User's address",
                        example: "Hougang Avenue 10, Singapore",
                    },
                    description: {
                        type: "string",
                        description: "Short description about user",
                        example: "Mid-senior level Software Engineer",
                    }
                }
            },
            // Model for login input
            LoginInput: {
                type: "object",
                properties: {
                    id: {
                        type: "string",
                        description: "User's ID",
                        example: "bobo",
                    },
                    password: {
                        type: "string",
                        description: "User's encrypted password for authentication",
                        example: "12345",
                    },
                }
            },
            // Model for logout input
            LogoutInput: {
                type: "object",
                properties: {
                    id: {
                        type: "string",
                        description: "User's ID",
                        example: "bobo",
                    }
                }
            },
            // Model for refresh login input
            RefreshLoginInput: {
                type: "object",
                properties: {
                    refreshToken: {
                        type: "string",
                        description: "User's refresh token",
                        example: "sjchsjdoiaof",
                    }
                }
            },
            // Model for FindNearbyFriends input
            FindNearbyFriendsInput: {
                type: "object",
                properties: {
                    userId: {
                        type: "string",
                        description: "User's ID",
                        example: "bobo",
                    },
                    distance: {
                        type: "integer",
                        description: "Distance in meter",
                        example: 9000,
                    },
                }
            },
            // Model for CreateFollowing input
            CreateFollowingInput: {
                type: "object",
                properties: {
                    userId: {
                        type: "string",
                        description: "User's ID",
                        example: "bobo",
                    },
                    followingId: {
                        type: "string",
                        description: "ID of user's following people",
                        example: "coco",
                    },
                }
            },
            // id model
            id: {
                type: "string", // data type
                description: "An ID of a user", // desc
                example: "bobo", // example of an id
            },
        },
    },
};
